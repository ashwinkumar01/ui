import type { google, temporal } from '@temporalio/proto';
export declare type DescribeNamespaceResponse = temporal.api.workflowservice.v1.IDescribeNamespaceResponse;
export declare type DescribeWorkflowExecutionResponse = temporal.api.workflowservice.v1.IDescribeWorkflowExecutionResponse;
export declare type ListNamespacesResponse = temporal.api.workflowservice.v1.IListNamespacesResponse;
export declare type GetClusterInfoResponse = temporal.api.workflowservice.v1.IGetClusterInfoResponse;
export declare type GetWorkflowExecutionHistoryResponse = temporal.api.workflowservice.v1.IGetWorkflowExecutionHistoryResponse;
export declare type GetSearchAttributesResponse = temporal.api.workflowservice.v1.IGetSearchAttributesResponse;
export declare type ListWorkflowExecutionsResponse = temporal.api.workflowservice.v1.IListWorkflowExecutionsResponse;
export declare type ListScheduleResponse = temporal.api.workflowservice.v1.IListSchedulesResponse;
export declare type DescribeScheduleResponse = temporal.api.workflowservice.v1.IDescribeScheduleResponse;
export declare type CreateScheduleRequest = temporal.api.workflowservice.v1.ICreateScheduleRequest;
export declare type PatchScheduleRequest = temporal.api.workflowservice.v1.IPatchScheduleRequest;
export declare type UpdateScheduleRequest = temporal.api.workflowservice.v1.IUpdateScheduleRequest;
export declare type History = temporal.api.history.v1.IHistory;
export declare type HistoryEvent = temporal.api.history.v1.IHistoryEvent;
export declare type WorkflowExecutionStartedEventAttributes = temporal.api.history.v1.IWorkflowExecutionStartedEventAttributes;
export declare type WorkflowExecutionCompletedEventAttributes = temporal.api.history.v1.IWorkflowExecutionCompletedEventAttributes;
export declare type WorkflowExecutionFailedEventAttributes = temporal.api.history.v1.IWorkflowExecutionFailedEventAttributes;
export declare type WorkflowExecutionTimedOutEventAttributes = temporal.api.history.v1.IWorkflowExecutionTimedOutEventAttributes;
export declare type WorkflowTaskScheduledEventAttributes = temporal.api.history.v1.IWorkflowTaskScheduledEventAttributes;
export declare type WorkflowTaskStartedEventAttributes = temporal.api.history.v1.IWorkflowTaskStartedEventAttributes;
export declare type WorkflowTaskCompletedEventAttributes = temporal.api.history.v1.IWorkflowTaskCompletedEventAttributes;
export declare type WorkflowTaskTimedOutEventAttributes = temporal.api.history.v1.IWorkflowTaskTimedOutEventAttributes;
export declare type WorkflowTaskFailedEventAttributes = temporal.api.history.v1.IWorkflowTaskFailedEventAttributes;
export declare type ActivityTaskScheduledEventAttributes = temporal.api.history.v1.IActivityTaskScheduledEventAttributes;
export declare type ActivityTaskStartedEventAttributes = temporal.api.history.v1.IActivityTaskStartedEventAttributes;
export declare type ActivityTaskCompletedEventAttributes = temporal.api.history.v1.IActivityTaskCompletedEventAttributes;
export declare type ActivityTaskFailedEventAttributes = temporal.api.history.v1.IActivityTaskFailedEventAttributes;
export declare type ActivityTaskTimedOutEventAttributes = temporal.api.history.v1.IActivityTaskTimedOutEventAttributes;
export declare type TimerStartedEventAttributes = temporal.api.history.v1.ITimerStartedEventAttributes;
export declare type TimerFiredEventAttributes = temporal.api.history.v1.ITimerFiredEventAttributes;
export declare type ActivityTaskCancelRequestedEventAttributes = temporal.api.history.v1.IActivityTaskCancelRequestedEventAttributes;
export declare type ActivityTaskCanceledEventAttributes = temporal.api.history.v1.IActivityTaskCanceledEventAttributes;
export declare type TimerCanceledEventAttributes = temporal.api.history.v1.ITimerCanceledEventAttributes;
export declare type MarkerRecordedEventAttributes = temporal.api.history.v1.IMarkerRecordedEventAttributes;
export declare type WorkflowExecutionSignaledEventAttributes = temporal.api.history.v1.IWorkflowExecutionSignaledEventAttributes;
export declare type WorkflowExecutionTerminatedEventAttributes = temporal.api.history.v1.IWorkflowExecutionTerminatedEventAttributes;
export declare type WorkflowExecutionCancelRequestedEventAttributes = temporal.api.history.v1.IWorkflowExecutionCancelRequestedEventAttributes;
export declare type WorkflowExecutionCanceledEventAttributes = temporal.api.history.v1.IWorkflowExecutionCanceledEventAttributes;
export declare type RequestCancelExternalWorkflowExecutionInitiatedEventAttributes = temporal.api.history.v1.IRequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
export declare type RequestCancelExternalWorkflowExecutionFailedEventAttributes = temporal.api.history.v1.IRequestCancelExternalWorkflowExecutionFailedEventAttributes;
export declare type ExternalWorkflowExecutionCancelRequestedEventAttributes = temporal.api.history.v1.IExternalWorkflowExecutionCancelRequestedEventAttributes;
export declare type WorkflowExecutionContinuedAsNewEventAttributes = temporal.api.history.v1.IWorkflowExecutionContinuedAsNewEventAttributes;
export declare type StartChildWorkflowExecutionInitiatedEventAttributes = temporal.api.history.v1.IStartChildWorkflowExecutionInitiatedEventAttributes;
export declare type StartChildWorkflowExecutionFailedEventAttributes = temporal.api.history.v1.IStartChildWorkflowExecutionFailedEventAttributes;
export declare type ChildWorkflowExecutionStartedEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionStartedEventAttributes;
export declare type ChildWorkflowExecutionCompletedEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionCompletedEventAttributes;
export declare type ChildWorkflowExecutionFailedEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionFailedEventAttributes;
export declare type ChildWorkflowExecutionCanceledEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionCanceledEventAttributes;
export declare type ChildWorkflowExecutionTimedOutEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionTimedOutEventAttributes;
export declare type ChildWorkflowExecutionTerminatedEventAttributes = temporal.api.history.v1.IChildWorkflowExecutionTerminatedEventAttributes;
export declare type SignalExternalWorkflowExecutionInitiatedEventAttributes = temporal.api.history.v1.ISignalExternalWorkflowExecutionInitiatedEventAttributes;
export declare type SignalExternalWorkflowExecutionFailedEventAttributes = temporal.api.history.v1.ISignalExternalWorkflowExecutionFailedEventAttributes;
export declare type ExternalWorkflowExecutionSignaledEventAttributes = temporal.api.history.v1.IExternalWorkflowExecutionSignaledEventAttributes;
export declare type UpsertWorkflowSearchAttributesEventAttributes = temporal.api.history.v1.IUpsertWorkflowSearchAttributesEventAttributes;
export declare type WorkflowExecutionStatus = temporal.api.enums.v1.WorkflowExecutionStatus;
export declare type Severity = temporal.api.enums.v1.Severity;
export declare type PendingActivityInfo = temporal.api.workflow.v1.IPendingActivityInfo;
export declare type PendingChildrenInfo = temporal.api.workflow.v1.IPendingChildExecutionInfo;
export declare type WorkflowExecutionInfo = temporal.api.workflow.v1.IWorkflowExecutionInfo;
export declare type Payload = temporal.api.common.v1.IPayload;
export declare type Payloads = temporal.api.common.v1.IPayloads;
export declare type PollerInfo = temporal.api.taskqueue.v1.IPollerInfo;
export declare type TaskQueueStatus = temporal.api.taskqueue.v1.ITaskQueueStatus;
export declare type ScheduleListEntry = temporal.api.schedule.v1.IScheduleListEntry;
export declare type ScheduleSpec = temporal.api.schedule.v1.IScheduleSpec;
export declare type ScheduleState = temporal.api.schedule.v1.IScheduleState;
export declare type SchedulePolicies = temporal.api.schedule.v1.ISchedulePolicies;
export declare type CalendarSpec = temporal.api.schedule.v1.ICalendarSpec;
export declare type IntervalSpec = temporal.api.schedule.v1.IIntervalSpec;
export declare type ScheduleActionResult = temporal.api.schedule.v1.IScheduleActionResult;
export declare type Timestamp = google.protobuf.ITimestamp;
export declare type SettingsResponse = {
    Auth: {
        Enabled: boolean;
        Options: string[];
    };
    Codec: {
        Endpoint: string;
        PassAccessToken?: boolean;
        AccessToken?: string;
    };
    DefaultNamespace: string;
    DisableWriteActions: boolean;
    ShowTemporalSystemNamespace: boolean;
    NotifyOnNewVersion: boolean;
    FeedbackURL: string;
    Version: string;
};
